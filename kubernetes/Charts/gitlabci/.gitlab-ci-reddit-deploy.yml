image: alpine:latest

stages:
  - test
  - staging
  - production

test:
  stage: test
  script:
    - exit 0
  only:
    - triggers
    - branches

staging:
  stage: staging
  variables:
    KUBE_NAMESPACE: staging
    # host: $CI_PROJECT_PATH_SLUG-$CI_COMMIT_REF_SLUG
    host: staging
    CI_APPLICATION_TAG: $CI_COMMIT_REF_SLUG
    name: $CI_ENVIRONMENT_SLUG
  environment:
    name: staging
    url: http://staging
  only:
    refs:
      - master
    kubernetes: active
  before_script:
    - apk add -U openssl curl tar gzip bash ca-certificates git
    - wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub
    - wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.23-r3/glibc-2.23-r3.apk
    - apk add glibc-2.23-r3.apk
    - rm glibc-2.23-r3.apk
    - curl https://get.helm.sh/helm-v3.0.0-beta.3-linux-amd64.tar.gz | tar zx
    - mv linux-amd64/helm /usr/bin/
    - helm version
    - curl -L -o /usr/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x /usr/bin/kubectl
    - kubectl version --client
  script:
    - kubectl describe namespace "$KUBE_NAMESPACE" || kubectl create namespace "$KUBE_NAMESPACE"
    - echo $KUBE_NAMESPACE
    - track="${1-stable}"
    - name="$CI_ENVIRONMENT_SLUG"
    - helm repo add mongodb https://kubernetes-charts.storage.googleapis.com
    # - helm dep update reddit
    - helm dep build reddit
    - >
      helm upgrade --install \
        --wait \
        --set ui.ingress.host="$host" \
        --set ui.image.tag="$(curl http://gitlab-gitlab/$CI_PROJECT_NAMESPACE/ui/raw/master/VERSION)" \
        --set post.image.tag="$(curl http://gitlab-gitlab/$CI_PROJECT_NAMESPACE/post/raw/master/VERSION)" \
        --set comment.image.tag="$(curl http://gitlab-gitlab/$CI_PROJECT_NAMESPACE/comment/raw/master/VERSION)" \
        --namespace="$KUBE_NAMESPACE" \
        --version="$CI_PIPELINE_ID-$CI_JOB_ID" \
        "$name" \
        reddit

production:
  stage: production
  variables:
    KUBE_NAMESPACE: production
    # host: $CI_PROJECT_PATH_SLUG-$CI_COMMIT_REF_SLUG
    host: production
    CI_APPLICATION_TAG: $CI_COMMIT_REF_SLUG
    name: $CI_ENVIRONMENT_SLUG
  environment:
    name: production
    url: http://production
  when: manual
  only:
    refs:
      - master
    kubernetes: active
  before_script:
    - apk add -U openssl curl tar gzip bash ca-certificates git
    - wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub
    - wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.23-r3/glibc-2.23-r3.apk
    - apk add glibc-2.23-r3.apk
    - rm glibc-2.23-r3.apk
    - curl https://get.helm.sh/helm-v3.0.0-beta.3-linux-amd64.tar.gz | tar zx
    - mv linux-amd64/helm /usr/bin/
    - helm version
    - curl -L -o /usr/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x /usr/bin/kubectl
    - kubectl version --client
  script:
    - kubectl describe namespace "$KUBE_NAMESPACE" || kubectl create namespace "$KUBE_NAMESPACE"
    - echo $KUBE_NAMESPACE
    - track="${1-stable}"
    - name="$CI_ENVIRONMENT_SLUG"
    - helm repo add mongodb https://kubernetes-charts.storage.googleapis.com
    # - helm dep update reddit
    - helm dep build reddit
    - >
      helm upgrade --install \
        --wait \
        --set ui.ingress.host="$host" \
        --set ui.image.tag="$(curl http://gitlab-gitlab/$CI_PROJECT_NAMESPACE/ui/raw/master/VERSION)" \
        --set post.image.tag="$(curl http://gitlab-gitlab/$CI_PROJECT_NAMESPACE/post/raw/master/VERSION)" \
        --set comment.image.tag="$(curl http://gitlab-gitlab/$CI_PROJECT_NAMESPACE/comment/raw/master/VERSION)" \
        --namespace="$KUBE_NAMESPACE" \
        --version="$CI_PIPELINE_ID-$CI_JOB_ID" \
        "$name" \
        reddit

# .auto_devops: &auto_devops |
#   # Auto DevOps variables and functions
#   [[ "$TRACE" ]] && set -x
#   export CI_REGISTRY="index.docker.io"
#   export CI_APPLICATION_REPOSITORY=$CI_REGISTRY/$CI_PROJECT_PATH
#   export CI_APPLICATION_TAG=$CI_COMMIT_REF_SLUG
#   export CI_CONTAINER_NAME=ci_job_build_${CI_JOB_ID}
#   export TILLER_NAMESPACE="kube-system"
#
#   function deploy() {
#     echo $KUBE_NAMESPACE
#     track="${1-stable}"
#     name="$CI_ENVIRONMENT_SLUG"
#     helm dep build reddit
#
#     # for microservice in $(helm dep ls | grep "file://" | awk '{print $1}') ; do
#     #   SET_VERSION="$SET_VERSION \ --set $microservice.image.tag='$(curl http://gitlab-gitlab/$CI_PROJECT_NAMESPACE/ui/raw/master/VERSION)' "
#
#     helm upgrade --install \
#       --wait \
#       --set ui.ingress.host="$host" \
#       --set ui.image.tag="$(curl http://gitlab-gitlab/$CI_PROJECT_NAMESPACE/ui/raw/master/VERSION)" \
#       --set post.image.tag="$(curl http://gitlab-gitlab/$CI_PROJECT_NAMESPACE/post/raw/master/VERSION)" \
#       --set comment.image.tag="$(curl http://gitlab-gitlab/$CI_PROJECT_NAMESPACE/comment/raw/master/VERSION)" \
#       --namespace="$KUBE_NAMESPACE" \
#       --version="$CI_PIPELINE_ID-$CI_JOB_ID" \
#       "$name" \
#       reddit
#   }
#
#   function install_dependencies() {
#
#     apk add -U openssl curl tar gzip bash ca-certificates git
#     wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub
#     wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.23-r3/glibc-2.23-r3.apk
#     apk add glibc-2.23-r3.apk
#     rm glibc-2.23-r3.apk
#
#     curl https://kubernetes-helm.storage.googleapis.com/helm-v2.13.1-linux-amd64.tar.gz | tar zx
#
#     mv linux-amd64/helm /usr/bin/
#     helm version --client
#
#     curl -L -o /usr/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
#     chmod +x /usr/bin/kubectl
#     kubectl version --client
#   }
#
#   function ensure_namespace() {
#     kubectl describe namespace "$KUBE_NAMESPACE" || kubectl create namespace "$KUBE_NAMESPACE"
#   }
#
#   function install_tiller() {
#     echo "Checking Tiller..."
#     helm init --upgrade
#     kubectl rollout status -n "$TILLER_NAMESPACE" -w "deployment/tiller-deploy"
#     if ! helm version --debug; then
#       echo "Failed to init Tiller."
#       return 1
#     fi
#     echo ""
#   }
#
#   function delete() {
#     track="${1-stable}"
#     name="$CI_ENVIRONMENT_SLUG"
#     helm delete "$name" || true
#   }
#
# before_script:
#   - *auto_devops
